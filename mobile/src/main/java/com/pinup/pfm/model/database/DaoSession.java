package com.pinup.pfm.model.database;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.pinup.pfm.model.database.Category;
import com.pinup.pfm.model.database.User;
import com.pinup.pfm.model.database.Transaction;

import com.pinup.pfm.model.database.CategoryDao;
import com.pinup.pfm.model.database.UserDao;
import com.pinup.pfm.model.database.TransactionDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig categoryDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig transactionDaoConfig;

    private final CategoryDao categoryDao;
    private final UserDao userDao;
    private final TransactionDao transactionDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        categoryDaoConfig = daoConfigMap.get(CategoryDao.class).clone();
        categoryDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        transactionDaoConfig = daoConfigMap.get(TransactionDao.class).clone();
        transactionDaoConfig.initIdentityScope(type);

        categoryDao = new CategoryDao(categoryDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        transactionDao = new TransactionDao(transactionDaoConfig, this);

        registerDao(Category.class, categoryDao);
        registerDao(User.class, userDao);
        registerDao(Transaction.class, transactionDao);
    }
    
    public void clear() {
        categoryDaoConfig.getIdentityScope().clear();
        userDaoConfig.getIdentityScope().clear();
        transactionDaoConfig.getIdentityScope().clear();
    }

    public CategoryDao getCategoryDao() {
        return categoryDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public TransactionDao getTransactionDao() {
        return transactionDao;
    }

}
