apply plugin: 'com.android.application'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        applicationId "com.pinup.pfm"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // TODO This need to be deleted before production
        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["dart.henson.package": 'com.pinup.pfm.view']
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    productFlavors {
        dev {
            // dev utilizes minSDKVersion = 21 to allow the Android gradle plugin
            // to pre-dex each module and produce an APK that can be tested on
            // Android Lollipop without time consuming dex merging processes.
            minSdkVersion 21
            versionNameSuffix "-dev" + "-build" + getDate()
        }
        prod {
            // The actual minSdkVersion for the application.
            minSdkVersion 19
        }
    }
}

kapt {
    generateStubs = true
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    wearApp project(':wear')

    compile "com.android.support:appcompat-v7:$appcompatVersion"
    compile "com.android.support:design:$appcompatVersion"
    compile "com.google.android.gms:play-services-wearable:$playServicesVersion"
    compile "com.google.android.gms:play-services-location:$playServicesVersion"
    compile "com.google.android.gms:play-services-maps:$playServicesVersion"

    // ReactiveX
    compile 'io.reactivex.rxjava2:rxjava:2.0.1'
    compile "io.reactivex.rxjava2:rxandroid:2.0.1"
    compile "com.github.akarnokd:rxjava2-extensions:0.14.3"
    compile 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    compile 'com.patloew.rxlocation:rxlocation:1.0.2'

    // Kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    // network communication
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile "com.squareup.okhttp3:okhttp:3.4.2"
    compile "com.squareup.okhttp3:logging-interceptor:3.4.2"

    // Anko for kotlin
    compile "org.jetbrains.anko:anko-sdk15:$ankoVersion" // sdk19, sdk21, sdk23 are also available
    compile "org.jetbrains.anko:anko-support-v4:$ankoVersion" // In case you need support-v4 bindings
    compile "org.jetbrains.anko:anko-appcompat-v7:$ankoVersion" // For appcompat-v7 bindings
    compile "org.jetbrains.anko:anko-design:$ankoVersion"
    compile "org.jetbrains.anko:anko-recyclerview-v7:$ankoVersion"

    // Dagger
    compile "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    provided 'org.glassfish:javax.annotation:10.0-b28'

    // Eventbus
    //compile 'org.greenrobot:eventbus:3.0.0'

    // Fragment argument injection
    compile 'com.hannesdorfmann.fragmentargs:annotation:3.0.2'
    kapt 'com.hannesdorfmann.fragmentargs:processor:3.0.2'

    // Logger
    compile 'com.github.orhanobut:logger:1.12'

    // Special font support
    compile 'uk.co.chrisjenx:calligraphy:2.1.0'

    // Image
    compile 'com.squareup.picasso:picasso:2.5.2'

    // GreenDAO
    compile 'de.greenrobot:greendao:2.1.0'

    // Butterknife
    compile 'com.jakewharton:butterknife:7.0.1'
    kapt 'com.jakewharton:butterknife:7.0.1'
    compile 'com.jakewharton:kotterknife:0.1.0-SNAPSHOT'

    // Slide up panel
    compile 'com.sothree.slidinguppanel:library:3.3.0'

    // Material dialogs
    compile('com.github.afollestad.material-dialogs:core:0.8.5.8@aar') {
        transitive = true
    }

    // Camera handling
    compile ('com.commonsware.cwac:cam2:0.7.4')

    // Storage helper
    compile 'com.sromku:simple-storage:1.2.0'

    // Multidex
    compile 'com.android.support:multidex:1.0.1'

    // Permission dispatcher
    compile 'com.github.hotchemi:permissionsdispatcher:2.3.1'
    kapt 'com.github.hotchemi:permissionsdispatcher-processor:2.3.1'

    // Dart - extra injection
    compile 'com.f2prateek.dart:dart:2.0.1'
    kapt 'com.f2prateek.dart:dart-processor:2.0.1'
    compile 'com.f2prateek.dart:henson:2.0.1'
    kapt 'com.f2prateek.dart:henson-processor:2.0.1'

    // ############### Test ###################

    // ############### JVM ###################
    // JUnit
    testCompile 'junit:junit:4.12'

    // Robolectric
    testCompile "org.robolectric:robolectric:3.3.1"
    testCompile "org.robolectric:shadows-multidex:3.3" // For multidex support
//    testCompile('org.robolectric:shadows-support-v4:3.3') {
//        exclude group: 'commons-logging', module: 'commons-logging'
//        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
//    }

    // Mockito
    testCompile "org.mockito:mockito-core:1.10.19"

    // Dagger
    testCompile "com.google.dagger:dagger:$daggerVersion"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVersion"
    kaptTest "com.google.dagger:dagger-compiler:$daggerVersion"
    testCompile 'org.glassfish:javax.annotation:10.0-b28'

    // ############### Android test ###################
    //Espresso
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2')
            {
                exclude group: 'com.google.code.findbugs', module: 'jsr305'
            }
    androidTestCompile "com.android.support:support-annotations:$appcompatVersion"

    // Mockito
    androidTestCompile "org.mockito:mockito-core:1.10.19"
}
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version"
    }
}
repositories {
    mavenCentral()
}

def getDate() {
    new Date().format('yyyyMMdd')
}
